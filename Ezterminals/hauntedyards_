getgenv().ByEzTerminals = {
    Silent = true,
    Wallcheck = true,
    Radius = {
        RadiusAmount = 30,
        Prediction = {
            PredictionAmount = 0.14,
            AutoPrediction = {
                Enabled = true,
                Type = "Normal", -- Normal, Custom
                ping20_30 = 0.12588,
                ping30_40 = 0.11911,
                ping40_50 = 0.12471,
                ping50_60 = 0.13766,
                ping60_70 = 0.13731,
                ping70_80 = 0.13951,
                ping80_90 = 0.14181,
                ping90_100 = 0.148,
                ping100_110 = 0.156,
                ping110_120 = 0.1567,
                ping120_130 = 0.12588,
                ping130_140 = 0.12588,
                ping140_150 = 0.12588,
                ping150_160 = 0.12588,
                ping160_170 = 0.12588,
                ping170_180 = 0.12588,
                ping180_190 = 0.12588,
                ping190_200 = 0.12588,
            },
            Mode = "Namecall", -- index, namecall
        },
        FOV = {
            Enabled = true,
            Size = 55,
            Filled = false,
            Thickness = 0.66,
            Transparency = 0.9,
            Color = Color3.fromRGB(255, 255, 255),
        },
    },
    Misc = {
        NoDelay = true,
        AutoReload = false,
        AutoAir = {
            Enabled = true,
            Interval = 0.5,
        },
    },
}

local function FindNearestEnemy()
    local LocalPlayer = game:GetService("Players").LocalPlayer
    local ClosestDistance, ClosestPlayer = math.huge, nil
    local Camera = game:GetService("Workspace").CurrentCamera
    local FOVSize = getgenv().ByEzTerminals.Radius.FOV.Size

    for _, Player in ipairs(game:GetService("Players"):GetPlayers()) do
        if Player ~= LocalPlayer then
            local Character = Player.Character
            if Character and Character:FindFirstChild("Humanoid") and Character.Humanoid.Health > 0 then
                local Position, IsVisibleOnViewPort = Camera:WorldToViewportPoint(Character:WaitForChild("HumanoidRootPart").Position)
                local DistanceToScreenCenter = (Vector2.new(Position.X, Position.Y) - Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)).Magnitude
                
                if IsVisibleOnViewPort and DistanceToScreenCenter <= FOVSize then
                    local Distance = (LocalPlayer.Character.HumanoidRootPart.Position - Character:WaitForChild("HumanoidRootPart").Position).Magnitude
                    if Distance < ClosestDistance then
                        ClosestPlayer = Character:WaitForChild("HumanoidRootPart")
                        ClosestDistance = Distance
                    end
                end
            end
        end
    end
    return ClosestPlayer, ClosestDistance
end

local function ApplyFOV()
    if not getgenv().ByEzTerminals.Radius.FOV.Enabled then return end
    
    local FOVCircle = Drawing.new("Circle")
    FOVCircle.Visible = true
    FOVCircle.Radius = getgenv().ByEzTerminals.Radius.FOV.Size
    FOVCircle.Thickness = getgenv().ByEzTerminals.Radius.FOV.Thickness
    FOVCircle.Transparency = getgenv().ByEzTerminals.Radius.FOV.Transparency
    FOVCircle.Color = getgenv().ByEzTerminals.Radius.FOV.Color
    FOVCircle.Filled = getgenv().ByEzTerminals.Radius.FOV.Filled
    
    game:GetService("RunService").RenderStepped:Connect(function()
        local Camera = game:GetService("Workspace").CurrentCamera
        FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
    end)
end

local function DrawTargetDot()
    local Dot = Drawing.new("Circle")
    Dot.Visible = false
    Dot.Radius = 5
    Dot.Color = Color3.fromRGB(128, 128, 128)
    Dot.Filled = true

    game:GetService("RunService").RenderStepped:Connect(function()
        local ClosestPlayer, _ = FindNearestEnemy()
        if ClosestPlayer then
            local Camera = game:GetService("Workspace").CurrentCamera
            local Position, IsVisibleOnViewPort = Camera:WorldToViewportPoint(ClosestPlayer.Position)
            if IsVisibleOnViewPort then
                Dot.Position = Vector2.new(Position.X, Position.Y)
                Dot.Visible = true
            else
                Dot.Visible = false
            end
        else
            Dot.Visible = false
        end
    end)
end

local oldNamecall
oldNamecall = hookmetamethod(game, "__namecall", function(self, ...)
    local args = {...}
    local method = getnamecallmethod()

    if method == "FindPartOnRayWithIgnoreList" and getgenv().ByEzTerminals.Silent then
        local ClosestPlayer = FindNearestEnemy()
        if ClosestPlayer then
            args[1] = Ray.new(game:GetService("Workspace").CurrentCamera.CFrame.Position, (ClosestPlayer.Position - game:GetService("Workspace").CurrentCamera.CFrame.Position).unit * 1000)
            return oldNamecall(self, unpack(args))
        end
    end

    return oldNamecall(self, ...)
end)

-- Initializing the functions
ApplyFOV()
DrawTargetDot()
